@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestão de Tarefas</title>

    <!-- CSS Customizado -->
    <style>
        body {
            background-color: #f8f9fa;
        }

        .container {
            margin-top: 50px;
        }

        .modal-content {
            border-radius: 10px;
        }

        .btn-actions {
            display: flex;
            gap: 10px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h1 class="mb-4 text-center">Gestão de Tarefas</h1>

        <!-- Botão para criar nova tarefa -->
        <button id="createTaskBtn" class="btn btn-primary mb-3">Criar Tarefa</button>

        <!-- Tabela de tarefas -->
        <table id="tasksTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Título</th>
                    <th>Descrição</th>
                    <th>Prioridade</th>
                    <th>Status</th>
                    <th>Ações</th>
                </tr>
            </thead>
        </table>
    </div>

    <!-- Modal para criação/edição -->
    <div class="modal fade" id="taskModal" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="taskModalLabel">Nova Tarefa</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="taskForm">
                        <input type="hidden" id="taskId" name="id">
                        <div class="mb-3">
                            <label for="taskTitle" class="form-label">Título</label>
                            <input type="text" class="form-control" id="taskTitle" name="title" required>
                        </div>
                        <div class="mb-3">
                            <label for="taskDescription" class="form-label">Descrição</label>
                            <textarea class="form-control" id="taskDescription" name="description"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="taskPriority" class="form-label">Prioridade</label>
                            <select class="form-select" id="taskPriority" name="priority" required>
                                <option value="Baixa">Baixa</option>
                                <option value="Média">Média</option>
                                <option value="Alta">Alta</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="taskStatus" class="form-label">Status</label>
                            <select class="form-select" id="taskStatus" name="status" required>
                                <option value="Pendente">Pendente</option>
                                <option value="Concluído">Concluído</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-success">Salvar</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            // Inicializa a tabela com DataTables
            $('#tasksTable').DataTable({
                ajax: '/api/tasks',
                columns: [
                    { data: 'title' },
                    { data: 'description' },
                    { data: 'priority' },
                    { data: 'status' },
                    {
                        data: null,
                        render: function (data) {
                            return `
                    <div class="btn-actions">
                        <button class="btn btn-warning btn-sm" onclick="editTask(${data.id})">Editar</button>
                        <button class="btn btn-danger btn-sm" onclick="deleteTask(${data.id})">Excluir</button>
                    </div>
                `;
                        }
                    }
                ],
                paging: true,
                searching: true,
                ordering: true,
                language: {
                    decimal: ",",
                    thousands: ".",
                    search: "Buscar:",
                    lengthMenu: "Exibir _MENU_ registros por página",
                    info: "Exibindo _START_ a _END_ de _TOTAL_ registros",
                    infoEmpty: "Nenhum registro disponível",
                    infoFiltered: "(filtrado de _MAX_ registros no total)",
                    loadingRecords: "Carregando...",
                    processing: "Processando...",
                    zeroRecords: "Nenhum registro encontrado",
                    emptyTable: "Nenhuma informação disponível na tabela",
                    paginate: {
                        first: "Primeiro",
                        previous: "Anterior",
                        next: "Próximo",
                        last: "Último"
                    },
                    aria: {
                        sortAscending: ": ativar para ordenar a coluna em ordem crescente",
                        sortDescending: ": ativar para ordenar a coluna em ordem decrescente"
                    }
                }
            });

            // Abrir o modal para criar nova tarefa
            $('#createTaskBtn').click(function () {
                $('#taskForm')[0].reset();
                $('#taskId').val('');
                $('#taskModalLabel').text('Nova Tarefa');
                $('#taskModal').modal('show');
            });

            // Submeter o formulário
            $('#taskForm').submit(function (e) {
                e.preventDefault();
                const formData = $(this).serialize();
                const isEditing = $('#taskId').val();

                const url = isEditing ? `/api/tasks/${$('#taskId').val()}` : '/api/tasks';
                const method = isEditing ? 'PUT' : 'POST';

                $.ajax({
                    url: url,
                    method: method,
                    data: formData,
                    success: function () {
                        $('#taskModal').modal('hide');
                        table.ajax.reload(); // Atualiza a tabela
                    },
                    error: function () {
                        alert('Erro ao salvar a tarefa!');
                    }
                });
            });
        });

        // Função para editar tarefa
        function editTask(id) {
            $.get(`/api/tasks/${id}`, function (data) {
                $('#taskId').val(data.id);
                $('#taskTitle').val(data.title);
                $('#taskDescription').val(data.description);
                $('#taskPriority').val(data.priority);
                $('#taskStatus').val(data.status);
                $('#taskModalLabel').text('Editar Tarefa');
                $('#taskModal').modal('show');
            });
        }

        // Função para excluir tarefa
        function deleteTask(id) {
            if (confirm('Tem certeza que deseja excluir esta tarefa?')) {
                $.ajax({
                    url: `/api/tasks/${id}`,
                    method: 'DELETE',
                    success: function () {
                        $('#tasksTable').DataTable().ajax.reload();
                    },
                    error: function () {
                        alert('Erro ao excluir a tarefa!');
                    }
                });
            }
        }
    </script>
</body>

</html>
